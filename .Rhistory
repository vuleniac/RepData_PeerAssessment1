```
## What is the average daily activity pattern?
```{r, echo=TRUE}
ave_steps <- ddply(steps, "interval", summarize,
ave = round(mean(steps, na.rm=T),2))
plot(ave_steps$interval, ave_steps$ave, type = "l")
max_interval <- ave_steps[ave_steps$ave==max(ave_steps$ave),"interval"]
max_interval <- hms(paste(floor(max_interval/100),round(((max_interval/100)-floor(max_interval/100))*100,0),"00",sep=":"))
```
## Imputing missing values
```{r, echo=TRUE}
steps$nas <- is.na(steps$steps)
tot_na <- sum(steps$nas)
new_steps <- steps
for(k in seq_along(new_steps$nas)){
if(new_steps$nas[k]==T){
new_steps$steps[k] <- ave_steps[ave_steps$interval==new_steps$interval[k],"ave"]
}
}
tot_new_steps <- ddply(steps, "date", summarize,
sum = sum(steps))
new_median <- median(tot_new_steps$sum)
new_mean <- mean(tot_new_steps$sum)
qplot(sum, data=tot_new_steps, binwidth=450)
```
## Are there differences in activity patterns between weekdays and weekends?
View(tot_new_steps)
View(tot_new_steps)
View(new_steps)
---
title: "Reproducible Research: Peer Assessment 1"
output:
html_document:
keep_md: true
---
## Loading and preprocessing the data
```{r ,echo=TRUE}
file_url='https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2Factivity.zip'
if(!file.exists("./activity.csv")){
if(!file.exists("./activity.zip")){
download.file(file_url, destfile="./activity.zip")
unzip("./activity.zip",exdir=".")
}else{
unzip("./activity.zip",exdir=".")
}
}
```
```{r, echo=TRUE}
is.installed <- function(pck = NULL){
installed_pck <- as.character(rownames(installed.packages()))
if(is.null(pck)){
installed_pck
}else{
pck %in% installed_pck
}
}
required<- c("lubridate", "plyr", "ggplot2")
for(i in required){
if(is.installed(i)==T){
if(!is.element(i, .packages())) {
library(i, character.only = T)
}
}else{
install.packages(i)
library(i, character.only = T)
}
}
```
```{r, echo=TRUE}
steps <- as.data.frame(read.csv("activity.csv", stringsAsFactors=F))
steps$time <- paste(floor(steps$interval/100),round(((steps$interval/100)-floor(steps$interval/100))*100,0),sep=":")
steps$DateTime <- ymd_hms(paste( steps$date, steps$time, "00", sep=" "))
```
## What is mean total number of steps taken per day?
```{r, echo=TRUE}
tot_steps <- ddply(steps, "date", summarize,
sum = sum(steps, na.rm=T))
median <- median(tot_steps$sum)
mean <- mean(tot_steps$sum)
qplot(sum, data=tot_steps, binwidth=450)
```
## What is the average daily activity pattern?
```{r, echo=TRUE}
ave_steps <- ddply(steps, "interval", summarize,
ave = round(mean(steps, na.rm=T),2))
plot(ave_steps$interval, ave_steps$ave, type = "l")
max_interval <- ave_steps[ave_steps$ave==max(ave_steps$ave),"interval"]
max_interval <- hms(paste(floor(max_interval/100),round(((max_interval/100)-floor(max_interval/100))*100,0),"00",sep=":"))
```
## Imputing missing values
```{r, echo=TRUE}
steps$nas <- is.na(steps$steps)
tot_na <- sum(steps$nas)
new_steps <- steps
for(k in seq_along(new_steps$nas)){
if(new_steps$nas[k]==T){
new_steps$steps[k] <- ave_steps[ave_steps$interval==new_steps$interval[k],"ave"]
}
}
tot_new_steps <- ddply(steps, "date", summarize,
sum = sum(steps))
new_median <- median(tot_new_steps$sum)
new_mean <- mean(tot_new_steps$sum)
qplot(sum, data=tot_new_steps, binwidth=450)
```
## Are there differences in activity patterns between weekdays and weekends?
steps$nas <- is.na(steps$steps)
tot_na <- sum(steps$nas)
new_steps <- steps
for(k in seq_along(new_steps$nas)){
if(new_steps$nas[k]==T){
new_steps$steps[k] <- ave_steps[ave_steps$interval==new_steps$interval[k],"ave"]
}
}
tot_new_steps <- ddply(steps, "date", summarize,
sum = sum(steps, na.rm=T))
new_median <- median(tot_new_steps$sum)
new_mean <- mean(tot_new_steps$sum)
qplot(sum, data=tot_new_steps, binwidth=450)
tot_new_steps <- ddply(steps, "date", summarize,
sum = sum(steps))
new_median <- median(tot_new_steps$sum)
new_mean <- mean(tot_new_steps$sum)
qplot(sum, data=tot_new_steps, binwidth=450)
View(tot_new_steps)
View(steps)
steps$nas <- is.na(steps$steps)
tot_na <- sum(steps$nas)
new_steps <- steps
for(k in seq_along(new_steps$nas)){
if(new_steps$nas[k]==T){
new_steps$steps[k] <- ave_steps[ave_steps$interval==new_steps$interval[k],"ave"]
}
}
new_steps$nas <- is.na(new_steps$steps)
sum(new_steps$nas)
---
title: "Reproducible Research: Peer Assessment 1"
output:
html_document:
keep_md: true
---
## Loading and preprocessing the data
```{r ,echo=TRUE}
file_url='https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2Factivity.zip'
if(!file.exists("./activity.csv")){
if(!file.exists("./activity.zip")){
download.file(file_url, destfile="./activity.zip")
unzip("./activity.zip",exdir=".")
}else{
unzip("./activity.zip",exdir=".")
}
}
```
```{r, echo=TRUE}
is.installed <- function(pck = NULL){
installed_pck <- as.character(rownames(installed.packages()))
if(is.null(pck)){
installed_pck
}else{
pck %in% installed_pck
}
}
required<- c("lubridate", "plyr", "ggplot2")
for(i in required){
if(is.installed(i)==T){
if(!is.element(i, .packages())) {
library(i, character.only = T)
}
}else{
install.packages(i)
library(i, character.only = T)
}
}
```
```{r, echo=TRUE}
steps <- as.data.frame(read.csv("activity.csv", stringsAsFactors=F))
steps$time <- paste(floor(steps$interval/100),round(((steps$interval/100)-floor(steps$interval/100))*100,0),sep=":")
steps$DateTime <- ymd_hms(paste( steps$date, steps$time, "00", sep=" "))
```
## What is mean total number of steps taken per day?
```{r, echo=TRUE}
tot_steps <- ddply(steps, "date", summarize,
sum = sum(steps, na.rm=T))
median <- median(tot_steps$sum)
mean <- mean(tot_steps$sum)
qplot(sum, data=tot_steps, binwidth=450)
```
## What is the average daily activity pattern?
```{r, echo=TRUE}
ave_steps <- ddply(steps, "interval", summarize,
ave = round(mean(steps, na.rm=T),2))
plot(ave_steps$interval, ave_steps$ave, type = "l")
max_interval <- ave_steps[ave_steps$ave==max(ave_steps$ave),"interval"]
max_interval <- hms(paste(floor(max_interval/100),round(((max_interval/100)-floor(max_interval/100))*100,0),"00",sep=":"))
```
## Imputing missing values
```{r, echo=TRUE}
steps$nas <- is.na(steps$steps)
tot_na <- sum(steps$nas)
new_steps <- steps
for(k in seq_along(new_steps$nas)){
if(new_steps$nas[k]==T){
new_steps$steps[k] <- ave_steps[ave_steps$interval==new_steps$interval[k],"ave"]
}
}
new_steps$nas <- is.na(new_steps$steps)
tot_new_steps <- ddply(new_steps, "date", summarize,
sum = sum(steps))
new_median <- median(tot_new_steps$sum)
new_mean <- mean(tot_new_steps$sum)
qplot(sum, data=tot_new_steps, binwidth=450)
```
## Are there differences in activity patterns between weekdays and weekends?
qplot(sum, data=tot_new_steps, binwidth=500)
qplot(sum, data=tot_new_steps, binwidth=600)
qplot(sum, data=tot_new_steps, binwidth=300)
qplot(sum, data=tot_new_steps, binwidth=400)
qplot(sum, data=tot_new_steps, binwidth=375)
qplot(sum, data=tot_new_steps, binwidth=475)
qplot(sum, data=tot_new_steps, binwidth=575)
qplot(sum, data=tot_new_steps, binwidth=675)
qplot(sum, data=tot_new_steps, binwidth=475)
qplot(sum, data=tot_new_steps, binwidth=500)
qplot(sum, data=tot_new_steps, binwidth=600)
qplot(sum, data=tot_new_steps, binwidth=300)
qplot(sum, data=tot_new_steps, binwidth=400)
qplot(sum, data=tot_new_steps, binwidth=600)
qplot(sum, data=tot_new_steps, binwidth=500)
qplot(sum, data=tot_new_steps, binwidth=300)
qplot(sum, data=tot_new_steps, binwidth=500)
qplot(sum, data=tot_steps, binwidth=500)
new_steps$week <- wday(new_steps$DateTime,lable=F)
new_steps$week <- wday(new_steps$DateTime,label=F)
View(new_steps)
qplot(sum, data=tot_steps, binwidth=500)
plot(ave_steps$interval, ave_steps$ave, type = "l")
qplot(interval,ave,data=Week_ave_steps, facets = week~.)
new_steps$day <- wday(new_steps$DateTime,label=F)
new_steps$week <- 2
new_steps[new_steps$day<=5,"week"] <- 1
Week_ave_steps <- ddply(new_steps, c("interval","week"), summarize,
ave = round(mean(steps, na.rm=T),2))
qplot(interval,ave,data=Week_ave_steps, facets = week~.)
qplot(interval,ave,data=Week_ave_steps, facets = week~., geom_line)
qplot(interval,ave,data=Week_ave_steps, facets = week~., geom_line())
geomline(interval,ave,data=Week_ave_steps, facets = week~.)
qplot(interval,ave,data=Week_ave_steps, facets = week~., type="l")
qplot(interval,ave,data=Week_ave_steps, facets = week~.) + geom_line()
ggplot(interval,ave,data=Week_ave_steps, facets = week~.) + geom_line()
ggplot(interval,ave,data=Week_ave_steps, facets = week~.) + geom_line()
g <-ggplot(interval,ave,data=Week_ave_steps, facets = week~.) + geom_line()
g <-ggplot(interval,ave,data=Week_ave_steps, facets = week~.)
g + geom_line()
g <- ggplot(interval,ave,data=Week_ave_steps, facets = week~.)
qplot(interval,ave,data=Week_ave_steps, facets = week~.) + geom_line()
qplot(interval,ave,data=Week_ave_steps, facets = week~., geom="line")
as.factors(new_steps$week,levels= c("weekdays", "weekends"))
as.factor(new_steps$week,levels= c("weekdays", "weekends"))
new_steps$week <- factors(new_steps$week, levels=c("weekdays", "weekends")
new_steps$week <- factors(new_steps$week, levels=c("weekdays", "weekends"))
Week_ave_steps <- ddply(new_steps, c("interval","week"), summarize,
new_steps$week <- factors(new_steps$week, levels=c("weekdays", "weekends"))
)
new_steps$week <- factor(new_steps$week, levels=c("weekdays", "weekends"))
View(new_steps)
new_steps$day <- wday(new_steps$DateTime,label=F)
new_steps$week <- 2
new_steps[new_steps$day<=5,"week"] <- 1
new_steps$week <- factor(new_steps$week, levels=c("weekdays", "weekends"))
View(new_steps)
as.factor(new_steps$week)
new_steps$day <- wday(new_steps$DateTime,label=F)
new_steps$week <- "weekends"
new_steps[new_steps$day<=5,"week"] <- "weekdays"
new_steps$week <- as.factor(new_steps$week)
View(new_steps)
Week_ave_steps <- ddply(new_steps, c("interval","week"), summarize,
ave = round(mean(steps, na.rm=T),2))
qplot(interval,ave,data=Week_ave_steps, facets = week~., geom="line")
g <- ggplot(Week_ave_steps, aes(interval,ave))
g + geom_line(aes(color = week), alpha = 1/2)
g <- ggplot(Week_ave_steps, aes(interval,ave))
g + geom_line(aes(color = week), size=4, alpha = 1/2)
g <- ggplot(Week_ave_steps, aes(interval,ave))
g + geom_line(aes(color = week), size=2, alpha = 1/2)
g <- ggplot(Week_ave_steps, aes(interval,ave))
g + geom_line(aes(color = week), size=1, alpha = 1/2)
g <- ggplot(Week_ave_steps, aes(interval,ave))
g + geom_line(aes(color = week), size=1, alpha = 1/2)
g + geom_line(aes(color = week), size=2/3, alpha = 1/2)
v <- ggplot(Week_ave_steps, aes(interval,ave))
v +geom_violin(alpha=0.5, color="gray")+geom_jitter(alpha=0.5, aes(color=week),
position = position_jitter(width = 0.1))+coord_flip()
v <-ggplot(Week_ave_steps, aes(interval,ave))
v + geom_violin(alpha=0.5, color="gray")+geom_jitter(alpha=0.5, aes(color=week),
position = position_jitter(width = 0.1))+coord_flip()
v <-ggplot(Week_ave_steps, aes(interval,ave))
v
v <-ggplot(Week_ave_steps, aes(interval,ave))
v + geom_violin(alpha=0.5, color="gray")+geom_jitter(alpha=0.5, aes(color=week),
position = position_jitter(width = 0.1))+coord_flip()
v <-ggplot(Week_ave_steps, aes(week,ave))
v + geom_violin(alpha=0.5, color="gray")+geom_jitter(alpha=0.5, aes(color=week),
position = position_jitter(width = 0.1))+coord_flip()
v <-ggplot(Week_ave_steps, aes(week,ave))
v + geom_violin(alpha=0.5, color="gray")+geom_jitter(alpha=0.5, aes(color=week),
position = position_jitter(width = 0.1))+coord_flip() +legend(F)
###############################################################################################################
---
title: "Reproducible Research: Peer Assessment 1"
output:
html_document:
keep_md: true
---
## Loading and preprocessing the data
```{r ,echo=TRUE}
file_url='https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2Factivity.zip'
if(!file.exists("./activity.csv")){
if(!file.exists("./activity.zip")){
download.file(file_url, destfile="./activity.zip")
unzip("./activity.zip",exdir=".")
}else{
unzip("./activity.zip",exdir=".")
}
}
```
```{r, echo=TRUE}
is.installed <- function(pck = NULL){
installed_pck <- as.character(rownames(installed.packages()))
if(is.null(pck)){
installed_pck
}else{
pck %in% installed_pck
}
}
required<- c("lubridate", "plyr", "ggplot2")
for(i in required){
if(is.installed(i)==T){
if(!is.element(i, .packages())) {
library(i, character.only = T)
}
}else{
install.packages(i)
library(i, character.only = T)
}
}
```
```{r, echo=TRUE}
steps <- as.data.frame(read.csv("activity.csv", stringsAsFactors=F))
steps$time <- paste(floor(steps$interval/100),round(((steps$interval/100)-floor(steps$interval/100))*100,0),sep=":")
steps$DateTime <- ymd_hms(paste( steps$date, steps$time, "00", sep=" "))
```
## What is mean total number of steps taken per day?
```{r, echo=TRUE}
tot_steps <- ddply(steps, "date", summarize,
sum = sum(steps, na.rm=T))
median <- median(tot_steps$sum)
mean <- mean(tot_steps$sum)
qplot(sum, data=tot_steps, binwidth=500)
```
## What is the average daily activity pattern?
```{r, echo=TRUE}
ave_steps <- ddply(steps, "interval", summarize,
ave = round(mean(steps, na.rm=T),2))
plot(ave_steps$interval, ave_steps$ave, type = "l")
max_interval <- ave_steps[ave_steps$ave==max(ave_steps$ave),"interval"]
max_interval <- hms(paste(floor(max_interval/100),round(((max_interval/100)-floor(max_interval/100))*100,0),"00",sep=":"))
```
## Imputing missing values
```{r, echo=TRUE}
steps$nas <- is.na(steps$steps)
tot_na <- sum(steps$nas)
new_steps <- steps
for(k in seq_along(new_steps$nas)){
if(new_steps$nas[k]==T){
new_steps$steps[k] <- ave_steps[ave_steps$interval==new_steps$interval[k],"ave"]
}
}
new_steps$nas <- is.na(new_steps$steps)
tot_new_steps <- ddply(new_steps, "date", summarize,
sum = sum(steps))
new_median <- median(tot_new_steps$sum)
new_mean <- mean(tot_new_steps$sum)
qplot(sum, data=tot_new_steps, binwidth=500)
```
## Are there differences in activity patterns between weekdays and weekends?
```{r, echo=TRUE}
new_steps$day <- wday(new_steps$DateTime,label=F)
new_steps$week <- "weekends"
new_steps[new_steps$day<=5,"week"] <- "weekdays"
new_steps$week <- as.factor(new_steps$week)
Week_ave_steps <- ddply(new_steps, c("interval","week"), summarize,
ave = round(mean(steps, na.rm=T),2))
qplot(interval,ave,data=Week_ave_steps, facets = week~., geom="line")
g <- ggplot(Week_ave_steps, aes(interval,ave))
g + geom_line(aes(color = week), size=1,  alpha = 1/2)
v <-ggplot(Week_ave_steps, aes(week,ave))
v + geom_violin(alpha=0.5, color="gray")+geom_jitter(alpha=0.5, aes(color=week),
position = position_jitter(width = 0.1))+coord_flip()
```
library(ggplo2)
library(ggplot2)
library(ggplot2)
library(plyer)
library(plyr)
---
title: "Reproducible Research: Peer Assessment 1"
output:
html_document:
keep_md: true
---
## Loading and preprocessing the data
### 1. Getting the data:
In order to guarantee the source data is consistent with the analysis performed in this analysis, the existance of the source dataset is checked as well as the compressed file used as a mean of delivery. If the source dataset is not found
```{r ,echo=TRUE}
file_url='https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2Factivity.zip'
if(!file.exists("./activity.csv")){
if(!file.exists("./activity.zip")){
download.file(file_url, destfile="./activity.zip")
unzip("./activity.zip",exdir=".")
}else{
unzip("./activity.zip",exdir=".")
}
}
```
```{r, echo=TRUE}
is.installed <- function(pck = NULL){
installed_pck <- as.character(rownames(installed.packages()))
if(is.null(pck)){
installed_pck
}else{
pck %in% installed_pck
}
}
required<- c("lubridate", "plyr", "ggplot2")
for(i in required){
if(is.installed(i)==T){
if(!is.element(i, .packages())) {
library(i, character.only = T, quietly = T,  verbose = F)
}
}else{
install.packages(i, quiet = T,  verbose = F)
library(i, character.only = T, quietly = T,  verbose = F)
}
}
```
```{r, echo=TRUE}
steps <- as.data.frame(read.csv("activity.csv", stringsAsFactors=F))
steps$time <- paste(floor(steps$interval/100),round(((steps$interval/100)-floor(steps$interval/100))*100,0),sep=":")
steps$DateTime <- ymd_hms(paste( steps$date, steps$time, "00", sep=" "))
```
## What is mean total number of steps taken per day?
```{r, echo=TRUE}
tot_steps <- ddply(steps, "date", summarize,
sum = sum(steps, na.rm=T))
median <- median(tot_steps$sum)
mean <- mean(tot_steps$sum)
qplot(sum, data=tot_steps, binwidth=500)
```
## What is the average daily activity pattern?
```{r, echo=TRUE}
ave_steps <- ddply(steps, "interval", summarize,
ave = round(mean(steps, na.rm=T),2))
plot(ave_steps$interval, ave_steps$ave, type = "l")
max_interval <- ave_steps[ave_steps$ave==max(ave_steps$ave),"interval"]
max_interval <- hms(paste(floor(max_interval/100),round(((max_interval/100)-floor(max_interval/100))*100,0),"00",sep=":"))
```
## Imputing missing values
```{r, echo=TRUE}
steps$nas <- is.na(steps$steps)
tot_na <- sum(steps$nas)
new_steps <- steps
for(k in seq_along(new_steps$nas)){
if(new_steps$nas[k]==T){
new_steps$steps[k] <- ave_steps[ave_steps$interval==new_steps$interval[k],"ave"]
}
}
new_steps$nas <- is.na(new_steps$steps)
tot_new_steps <- ddply(new_steps, "date", summarize,
sum = sum(steps))
new_median <- median(tot_new_steps$sum)
new_mean <- mean(tot_new_steps$sum)
qplot(sum, data=tot_new_steps, binwidth=500)
```
## Are there differences in activity patterns between weekdays and weekends?
```{r, echo=TRUE}
new_steps$day <- wday(new_steps$DateTime,label=F)
new_steps$week <- "weekends"
new_steps[new_steps$day<=5,"week"] <- "weekdays"
new_steps$week <- as.factor(new_steps$week)
Week_ave_steps <- ddply(new_steps, c("interval","week"), summarize,
ave = round(mean(steps, na.rm=T),2))
qplot(interval,ave,data=Week_ave_steps, facets = week~., geom="line")
g <- ggplot(Week_ave_steps, aes(interval,ave))
g + geom_line(aes(color = week), size=1,  alpha = 1/2)
v <-ggplot(Week_ave_steps, aes(week,ave))
v + geom_violin(alpha=0.5, color="gray")+geom_jitter(alpha=0.5, aes(color=week),
position = position_jitter(width = 0.1))+coord_flip()
```
class(max_interval)
(max_interval)
median <- median(tot_steps$sum)
mean <- round(mean(tot_steps$sum,2)
)
max_interval <- paste(hour(max_interval),minute(max_interval),sep":")
new_median <- trunc(median(tot_new_steps$sum,2)
new_mean <- trunc(mean(tot_new_steps$sum),2)
new_median
new_mean <- trunc(mean(tot_new_steps$sum),2)
new_mean <- trunc(mean(tot_new_steps$sum),4)
new_mean <- round(mean(tot_new_steps$sum),2)
